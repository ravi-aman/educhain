// utils/contract.js
import { ethers } from "ethers";

// Import ABIs generated by Hardhat (adjust the paths if necessary)
import ResearchPaperABI from "../artifacts/contracts/ResearchPaperSubmission.sol/ResearchPaperSubmission.json";
import PeerReviewABI from "../artifacts/contracts/PeerReview.sol/PeerReview.json";
import ResearchGrantsABI from "../artifacts/contracts/ResearchGrants.sol/ResearchGrants.json";

// Get deployed addresses from environment variables
const researchPaperAddress = process.env.NEXT_PUBLIC_RESEARCH_PAPER_ADDRESS;
const peerReviewAddress = process.env.NEXT_PUBLIC_PEER_REVIEW_ADDRESS;
const researchGrantsAddress = process.env.NEXT_PUBLIC_RESEARCH_GRANTS_ADDRESS;

// Create provider using EduChain RPC URL
export const provider = new ethers.providers.JsonRpcProvider(
  process.env.NEXT_PUBLIC_EDUCHAIN_RPC_URL
);

// The following functions assume a connected wallet (using MetaMask, etc.)
export function getResearchPaperContract(signer) {
  return new ethers.Contract(researchPaperAddress, ResearchPaperABI.abi, signer);
}

export function getPeerReviewContract(signer) {
  return new ethers.Contract(peerReviewAddress, PeerReviewABI.abi, signer);
}

export function getResearchGrantsContract(signer) {
  return new ethers.Contract(researchGrantsAddress, ResearchGrantsABI.abi, signer);
}
